// node_modules/@wistia/wistia-player-react/dist/mjs/chunk-KUPUTXLJ.mjs
var getMergedEmbedOption = (mediaId, optionKey, optionValue) => {
  var _a, _b, _c;
  let finalEmbedOption = optionValue;
  if (typeof window === "undefined") {
    return finalEmbedOption;
  }
  if (((_b = (_a = window.wistiaOptions) == null ? void 0 : _a._all) == null ? void 0 : _b[optionKey]) !== void 0) {
    finalEmbedOption = window.wistiaOptions._all[optionKey];
  }
  const mediaIdOptions = (_c = window.wistiaOptions) == null ? void 0 : _c[mediaId];
  if (mediaIdOptions !== void 0) {
    const mediaIdOptionValue = mediaIdOptions[optionKey];
    if (optionValue !== void 0) {
      finalEmbedOption = mediaIdOptionValue;
    }
  }
  return finalEmbedOption;
};
var camelCaseToKebabCase = (str) => {
  return str.replace(
    /[A-Z]+(?![a-z])|[A-Z]/g,
    (letter, idx) => (idx !== 0 ? "-" : "") + letter.toLowerCase()
  );
};
var getSwatchMetaData = async (url) => {
  const swatch = new Image();
  swatch.src = url;
  await swatch.decode();
  return swatch;
};
var swatchUrl = (mediaId, embedHost) => `https://${embedHost}/embed/medias/${mediaId}/swatch`;
var getSwatchAspectRatio = async (mediaId, embedHost = "fast.wistia.com") => {
  const swatchImg = await getSwatchMetaData(swatchUrl(mediaId, embedHost));
  const { naturalHeight, naturalWidth } = swatchImg;
  return naturalWidth / naturalHeight;
};
var wistiaPlayerStyleBlock = ({
  mediaId,
  embedHost = "fast.wistia.com",
  aspect = 1.7,
  shouldLoadSwatch = true,
  roundedPlayer = 0
}) => {
  const CSSProperties = {
    background: shouldLoadSwatch ? `center / contain no-repeat url(${swatchUrl(mediaId, embedHost)})` : void 0,
    borderRadius: `${roundedPlayer}px`,
    display: "block",
    filter: "blur(5px)",
    paddingTop: `${100 / aspect}%`
  };
  return `
    wistia-player[media-id='${mediaId}']:not(:defined) {
      ${Object.entries(CSSProperties).map(([key, value]) => `${camelCaseToKebabCase(key)}: ${value};`).join("\r\n")}
    }

    wistia-player[media-id='${mediaId}']:state(--initializing) {
      ${Object.entries(CSSProperties).map(([key, value]) => `${camelCaseToKebabCase(key)}: ${value};`).join("\r\n")}
    }
  `;
};

export {
  getMergedEmbedOption,
  camelCaseToKebabCase,
  getSwatchAspectRatio,
  wistiaPlayerStyleBlock
};
//# sourceMappingURL=chunk-GFM7KBTH.js.map
