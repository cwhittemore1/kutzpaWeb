import { Color } from './color.js';
export declare const colorContrastRatiosByShape: {
    nonText: number;
    largeText: number;
    paragraphText: number;
    smallText: number;
};
export declare const rgbToHsl: (color: Color | number[] | string) => {
    hue: number;
    lightness: number;
    saturation: number;
};
export declare const getContrast: (foreground: Color | string, background: Color | string) => number;
export declare const adjustColorForProperContrast: (foreground: Color | string, background: Color | string, shape?: keyof typeof colorContrastRatiosByShape) => string;
/**
 * Takes an array of values, either strings or Color objects, then
 *   - inserts black and white values in case we need these for our contrast-fetching functions using palettes
 *   - filters any duplicate values
 *   - sorts the palette from darkest to lightest color value by its relative luminance
 *
 * @param colors - an array of Color objects or strings representing hex values
 * @returns Color[]
 */
export declare const generateColorPalette: (colors: Color[] | string[]) => Color[];
/**
 * Given a set of colors, a background color, and any colors from the set that we want to exclude from consideration,
 * this utility returns an appropriate foreground color based on the contrast ratio required for the shape param.
 *
 * For example, this method could be used to determine that we should use white text against a black background and vice versa.
 *
 * @param colors - an array of Color objects or strings representing hex values
 * @param backgroundColor - a Color object or hex string
 * @param [colorsToExclude] - optional,  an array of Color objects or strings representing hex values
 * @param [shape] - optional, used to determine the appropriate contrast ratio used in calculating the foreground color
 * @returns
 */
export declare const getBestColorForShape: (colors: Color[] | string[], backgroundColor: Color | string, colorsToExclude?: Color[] | string[], shape?: keyof typeof colorContrastRatiosByShape) => string;
//# sourceMappingURL=color-utils.d.ts.map